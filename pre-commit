#! /usr/bin/python

# Git pre-commit hook
#
# Installation instructions:
# Symbolically link this file to .git/hooks with `cd .git/hooks; ln -s ../../pre-commit pre-commit'

import os, sys, unittest
if os.getcwd().split('/')[-1] == 'hooks':
	os.chdir('../..')
sys.path.append(os.getcwd())
from epicparser import *
from glob import glob


class TestTrowel(unittest.TestCase):


	# Lexer tests
	# Print tests
	def test_lexer_print_number(self):
		self.assertEqual(parsewrapper().gettokens("print 45"), [['UNKNOWNWORD', 'print', 1], ['NUMVAL', '45', 1]])
		self.assertEqual(parsewrapper().gettokens("print 4 5"), [['UNKNOWNWORD', 'print', 1], ['NUMVAL', '4', 1], ['NUMVAL', '5', 1]])
		
	def test_lexer_print_url(self):
		self.assertEqual(parsewrapper().gettokens("print 'this is a url'"), [['UNKNOWNWORD', 'print', 1], ['URLVAL', '\'this is a url\'', 1]])
		
	def test_lexer_print_text(self):
		self.assertEqual(parsewrapper().gettokens("print \"this is a text\""), [['UNKNOWNWORD', 'print', 1], ['TEXTVAL', '"this is a text"', 1]])
		
	# Read tests
	
	def test_lexer_save(self):
		self.assertEqual(parsewrapper().gettokens("save \"this is text\" into \"file.txt\""), [['UNKNOWNWORD', 'save', 1], ['TEXTVAL', '"this is text"', 1], ['UNKNOWNWORD', 'into', 1], ['TEXTVAL', '"file.txt"', 1]])
		
	#Error checking Lexer tests
	# Print tests
	def test_lexer_print_variable_Error(self):
		self.assertEqual(parsewrapper().gettokens("print x"), [['UNKNOWNWORD', 'print', 1], ['UNKNOWNWORD', 'x', 1]])

	

if __name__ == '__main__':
	for f in glob ('*.pyc'):
   		os.unlink(f)
	unittest.main()