#! /usr/bin/python

# Git pre-commit hook
#
# Installation instructions:
# Symbolically link this file to .git/hooks with `cd .git/hooks; ln -s ../../pre-commit pre-commit'

import os, sys, unittest
if os.getcwd().split('/')[-1] == 'hooks':
	os.chdir('../..')
sys.path.append(os.getcwd())
from Parser import parser
import trowel


class TestTrowel(unittest.TestCase):


	# Parse tests
	def test_parse_print_number(self):
		self.assertEqual(parser.parse("print 45"), ('func', 'printvals', 0, [('number', 45)]))
		

	# Single line input tests
	def test_print_number(self):
		self.assertEqual(trowel.main([None, "print 45"]), ['import os', 'from bs4 import BeautifulSoup', 'import urllib2', 'import re', 'import glob', '\n', 'print "45"'])
		self.assertEqual(trowel.main([None, "print 4 5"]), ['import os', 'from bs4 import BeautifulSoup', 'import urllib2', 'import re', 'import glob', '\n', 'print "45"'])
		self.assertEqual(trowel.main([None, "print 1"]), ['import os', 'from bs4 import BeautifulSoup', 'import urllib2', 'import re', 'import glob', '\n', 'print "1"'])
		
	def test_print_url(self):
		self.assertEqual(trowel.main([None, "print 'www.bbc.co.uk'"]), ['import os', 'from bs4 import BeautifulSoup', 'import urllib2', 'import re', 'import glob', '\n', 'print "www.bbc.co.uk"'])
		self.assertEqual(trowel.main([None, "print 'www.bbc.co.uk' 'www.cnn.com'"]), ['import os', 'from bs4 import BeautifulSoup', 'import urllib2', 'import re', 'import glob', '\n', 'print "www.bbc.co.ukwww.cnn.com"'])
		
	def test_print_text(self):
		self.assertEqual(trowel.main([None, "print \"I am a text object\""]), ['import os', 'from bs4 import BeautifulSoup', 'import urllib2', 'import re', 'import glob', '\n', 'print "I am a text object"'])
		self.assertEqual(trowel.main([None, "print \"I am a text object \" \"I am a second test object\""]), ['import os', 'from bs4 import BeautifulSoup', 'import urllib2', 'import re', 'import glob', '\n', 'print "I am a text object I am a second test object"'])
		
	def test_print_mixedVal(self):
		self.assertEqual(trowel.main([None, "print \"I am a text object \" 45"]), ['import os', 'from bs4 import BeautifulSoup', 'import urllib2', 'import re', 'import glob', '\n', 'print "I am a text object 45"'])
		self.assertEqual(trowel.main([None, "print \"I am a text object \" 'www.bbc.co.uk' \" \" 45"]), ['import os', 'from bs4 import BeautifulSoup', 'import urllib2', 'import re', 'import glob', '\n', 'print "I am a text object www.bbc.co.uk 45"'])
		
	def test_listprinting(self):
		self.assertEqual(trowel.main([None, "print [4, 5, 6]"]), ['import os', 'from bs4 import BeautifulSoup', 'import urllib2', 'import re', 'import glob', '\n', 'print "4"\nprint "5"\nprint "6"'])
		self.assertEqual(trowel.main([None, "print [\"This\", \"is\", \"3 texts\"]"]), ['import os', 'from bs4 import BeautifulSoup', 'import urllib2', 'import re', 'import glob', '\n', 'print "This"\nprint "is"\nprint "3 texts"'])
		self.assertEqual(trowel.main([None, "print [\'This\', \'is\', \'3 urls\']"]), ['import os', 'from bs4 import BeautifulSoup', 'import urllib2', 'import re', 'import glob', '\n', 'print "This"\nprint "is"\nprint "3 urls"'])
	
	def test_print_combine(self):
		self.assertEqual(trowel.main([None, "print 5 ( combine 'www.bbc.co.uk?' and 5 )"]), ['import os', 'from bs4 import BeautifulSoup', 'import urllib2', 'import re', 'import glob', '\n', 'print "5www.bbc.co.uk?5"'])
		self.assertEqual(trowel.main([None, "print ( combine 'www.bbc.co.uk?' and \"text\" )"]), ['import os', 'from bs4 import BeautifulSoup', 'import urllib2', 'import re', 'import glob', '\n', 'print "www.bbc.co.uk?text"'])
		
	def test_variable_declaration(self):
		self.assertEqual(trowel.main([None, "url temp"]), ['import os', 'from bs4 import BeautifulSoup', 'import urllib2', 'import re', 'import glob', '\n', "temp = ''"])
		self.assertEqual(trowel.main([None, "number temp"]), ['import os', 'from bs4 import BeautifulSoup', 'import urllib2', 'import re', 'import glob', '\n', "temp = 0"])
		self.assertEqual(trowel.main([None, "text temp"]), ['import os', 'from bs4 import BeautifulSoup', 'import urllib2', 'import re', 'import glob', '\n', 'temp = ""'])
		
	def test_list_declaration(self):
		self.assertEqual(trowel.main([None, "textlist temp"]), ['import os', 'from bs4 import BeautifulSoup', 'import urllib2', 'import re', 'import glob', '\n', 'temp = []'])
		self.assertEqual(trowel.main([None, "urllist temp"]), ['import os', 'from bs4 import BeautifulSoup', 'import urllib2', 'import re', 'import glob', '\n', 'temp = []'])
		self.assertEqual(trowel.main([None, "numlist temp"]), ['import os', 'from bs4 import BeautifulSoup', 'import urllib2', 'import re', 'import glob', '\n', 'temp = []'])
		
	def test_list_one_line_declaration_and_assignment(self):
		self.assertEqual(trowel.main([None, "urllist temp5 is ['www.cnn.com', 'www.bbc.com']"]), ['import os', 'from bs4 import BeautifulSoup', 'import urllib2', 'import re', 'import glob', '\n', "temp5 = ['www.cnn.com', 'www.bbc.com']"])
		self.assertEqual(trowel.main([None, "numlist temp5 is [1, 2, 3]"]), ['import os', 'from bs4 import BeautifulSoup', 'import urllib2', 'import re', 'import glob', '\n', "temp5 = [1, 2, 3]"])
		self.assertEqual(trowel.main([None, 'textlist temp5 is ["this", "is", "a", "list"]']), ['import os', 'from bs4 import BeautifulSoup', 'import urllib2', 'import re', 'import glob', '\n', "temp5 = ['this', 'is', 'a', 'list']"])
		
	def test_variable_one_line_declaration_and_assignment(self):
		self.assertEqual(trowel.main([None, "url temp is 'www.cnn.com'"]), ['import os', 'from bs4 import BeautifulSoup', 'import urllib2', 'import re', 'import glob', '\n', "temp = 'www.cnn.com'"])
		self.assertEqual(trowel.main([None, "number temp is 10"]), ['import os', 'from bs4 import BeautifulSoup', 'import urllib2', 'import re', 'import glob', '\n', "temp = 10"])
		self.assertEqual(trowel.main([None, 'text temp is "variable"']), ['import os', 'from bs4 import BeautifulSoup', 'import urllib2', 'import re', 'import glob', '\n', 'temp = "variable"'])		
		
	# Multiline input tests
	def test_two_line_declare_assign(self):
		self.assertEqual(trowel.main([None, r'text temp\ntemp is "This is text"']), ['import os', 'from bs4 import BeautifulSoup', 'import urllib2', 'import re', 'import glob', '\n', "temp = \"\"", "temp = \"This is text\""])
		self.assertEqual(trowel.main([None, r'number temp\ntemp is 5']), ['import os', 'from bs4 import BeautifulSoup', 'import urllib2', 'import re', 'import glob', '\n', "temp = 0", "temp = 5"])
		self.assertEqual(trowel.main([None, r"url temp\ntemp is 'www.bbc.co.uk'"]), ['import os', 'from bs4 import BeautifulSoup', 'import urllib2', 'import re', 'import glob', '\n', "temp = ''", "temp = 'www.bbc.co.uk'"])
		
	def test_two_line_assign_print(self):
		self.assertEqual(trowel.main([None, r'number temp is 5\nprint temp']), ['import os', 'from bs4 import BeautifulSoup', 'import urllib2', 'import re', 'import glob', '\n', "temp = 5", "print \"\" + str(temp) + \"\""])
		self.assertEqual(trowel.main([None, r'text temp is "this is text"\nprint temp']), ['import os', 'from bs4 import BeautifulSoup', 'import urllib2', 'import re', 'import glob', '\n', "temp = \"this is text\"", "print \"\" + str(temp) + \"\""])
		self.assertEqual(trowel.main([None, r"url temp is 'this is text'\nprint temp"]), ['import os', 'from bs4 import BeautifulSoup', 'import urllib2', 'import re', 'import glob', '\n', "temp = 'this is text'", "print \"\" + str(temp) + \"\""])
	
	# Sample program tests

if __name__ == '__main__':
	unittest.main()
